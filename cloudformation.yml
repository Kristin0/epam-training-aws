AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""
Resources:
    EC2VPC:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock: "10.0.0.0/16"
            EnableDnsSupport: true
            EnableDnsHostnames: true
            InstanceTenancy: "default"
            Tags: 
              - 
                Key: "Name"
                Value: "epam-vpc"

    EC2Subnet:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet2.AvailabilityZone
            CidrBlock: "10.0.32.0/19"
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false

    EC2Subnet2:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}b"
            CidrBlock: "10.0.144.0/20"
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: true

    EC2Subnet3:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet4.AvailabilityZone
            CidrBlock: "10.0.0.0/19"
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false

    EC2Subnet4:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Instance.AvailabilityZone
            CidrBlock: "10.0.128.0/20"
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: true
            Tags: 
              - 
                Key: "Name"
                Value: "public_1"

    EC2InternetGateway:
        Type: "AWS::EC2::InternetGateway"
        Properties:
            Tags: 
              - 
                Key: "Name"
                Value: "epam-gateway"

    EC2EIP:
        Type: "AWS::EC2::EIP"
        Properties:
            Domain: "vpc"
            InstanceId: !Ref EC2Instance

    EC2EIPAssociation:
        Type: "AWS::EC2::EIPAssociation"
        Properties:
            AllocationId: !GetAtt EC2EIP.AllocationId
            InstanceId: !Ref EC2Instance
            NetworkInterfaceId: "eni-0e81c24c12ad6c0db"
            PrivateIpAddress: !GetAtt EC2Instance.PrivateIp

    EC2EIP2:
        Type: "AWS::EC2::EIP"
        Properties:
            Domain: "vpc"

    EC2EIPAssociation2:
        Type: "AWS::EC2::EIPAssociation"
        Properties:
            AllocationId: !GetAtt EC2EIP2.AllocationId
            NetworkInterfaceId: "eni-04e8529f3f9fca89a"
            PrivateIpAddress: "10.0.132.206"

    EC2RouteTable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC
            Tags: 
              - 
                Key: "Name"
                Value: "epam-public-routing-table"

    EC2RouteTable2:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC
            Tags: 
              - 
                Key: "Name"
                Value: "epam-private-routing-table"

    EC2Route:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "0.0.0.0/0"
            GatewayId: !Ref EC2InternetGateway
            RouteTableId: !Ref EC2RouteTable

    EC2Route2:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "0.0.0.0/0"
            NatGatewayId: !Ref EC2NatGateway
            RouteTableId: !Ref EC2RouteTable2

    EC2NatGateway:
        Type: "AWS::EC2::NatGateway"
        Properties:
            SubnetId: !Ref EC2Subnet4
            Tags: 
              - 
                Key: "Name"
                Value: "epam-nat-gateway"
            AllocationId: !GetAtt EC2EIP2.AllocationId

    EC2SubnetRouteTableAssociation:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref EC2RouteTable
            SubnetId: !Ref EC2Subnet4

    EC2SubnetRouteTableAssociation2:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref EC2RouteTable
            SubnetId: !Ref EC2Subnet2

    EC2SubnetRouteTableAssociation3:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref EC2RouteTable2
            SubnetId: !Ref EC2Subnet

    EC2SubnetRouteTableAssociation4:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref EC2RouteTable2
            SubnetId: !Ref EC2Subnet3

    Route53HostedZone:
        Type: "AWS::Route53::HostedZone"
        Properties:
            Name: "epam-training.tk."

    EC2Instance:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-0767046d1677be5a0"
            InstanceType: "t2.micro"
            KeyName: "chris"
            AvailabilityZone: !GetAtt EC2Instance2.AvailabilityZone
            Tenancy: "default"
            SubnetId: "subnet-0eb804d14965d0790"
            EbsOptimized: false
            SecurityGroupIds: 
              - "sg-0e5143e2c196ea229"
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/sda1"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    SnapshotId: "snap-07c3e864b523cd314"
                    VolumeType: "gp2"
                    DeleteOnTermination: true
            Tags: 
              - 
                Key: "Name"
                Value: "Bastion"
            HibernationOptions: 
                Configured: false
            EnclaveOptions: 
                Enabled: false

    EC2Instance2:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-0767046d1677be5a0"
            InstanceType: "t2.micro"
            KeyName: "chris"
            AvailabilityZone: !Sub "${AWS::Region}a"
            Tenancy: "default"
            SubnetId: "subnet-0890097ddd867f7d5"
            EbsOptimized: false
            SecurityGroupIds: 
              - "sg-00bb63ab1a6ff6b20"
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/sda1"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    SnapshotId: "snap-07c3e864b523cd314"
                    VolumeType: "gp2"
                    DeleteOnTermination: true
            Tags: 
              - 
                Key: "Name"
                Value: "Wordpress"
            HibernationOptions: 
                Configured: false
            EnclaveOptions: 
                Enabled: false

    RDSDBInstance:
        Type: "AWS::RDS::DBInstance"
        Properties:
            DBInstanceIdentifier: "database-for-wordpress"
            AllocatedStorage: 20
            DBInstanceClass: "db.t2.micro"
            Engine: "mysql"
            MasterUsername: "admin"
            MasterUserPassword: "REPLACEME"
            PreferredBackupWindow: "21:56-22:26"
            BackupRetentionPeriod: 0
            AvailabilityZone: !GetAtt EC2Subnet3.AvailabilityZone
            PreferredMaintenanceWindow: "tue:02:14-tue:02:44"
            MultiAZ: false
            EngineVersion: "8.0.20"
            AutoMinorVersionUpgrade: false
            LicenseModel: "general-public-license"
            PubliclyAccessible: false
            StorageType: "gp2"
            Port: 3306
            StorageEncrypted: false
            CopyTagsToSnapshot: true
            MonitoringInterval: 0
            EnableIAMDatabaseAuthentication: false
            EnablePerformanceInsights: false
            DeletionProtection: false
            DBSubnetGroupName: !Sub "default-${EC2VPC}"
            VPCSecurityGroups: 
              - "sg-05a8ce6f8c749fd77"
            DBParameterGroupName: "default.mysql8.0"
            OptionGroupName: "default:mysql-8-0"
            CACertificateIdentifier: "rds-ca-2019"

